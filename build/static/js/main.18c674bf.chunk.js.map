{"version":3,"sources":["components/Header/wcdLogo.75bd35f4.png","serviceWorker.js","components/Footer/Footer.jsx","components/Header/Header.jsx","scripts/replacer.js","App.jsx","Log.js","Router.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Footer","className","Header","src","logo","alt","Git","require","pathToRepo","resolve","Repo","Repository","open","getCurrentBranch","a","then","repo","res","console","log","name","backupToRepo","sayHello","os","fs","ipcRenderer","username","userInfo","colorCodes","gtfo","valMessages","style","color","App","useState","connected","setConnected","validated","setValidated","brandId","setBrandId","ciidInput","setCiidInput","ciidArray","setCiidArray","replaceThis","setReplaceThis","withThis","setWithThis","del","setDel","deleteConfirmed","setDeleteConfirmed","firstOnly","setFirstOnly","pyLog","setPyLog","text","lastMessage","setLastMessage","validationCode","setValidationCode","useEffect","access","err","deleteOp","replaceSafe","length","withSafe","ciidCheck","test","valid","on","event","arg","code","substring","trimmed","message","push","onClick","replacer","value","onChange","e","target","id","type","checked","htmlFor","placeholder","visibility","formattedValue","replace","split","disabled","dataPayload","send","display","Log","state","hideLog","setState","this","map","line","idx","key","Component","Router","exact","path","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.18c674bf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wcdLogo.75bd35f4.75bd35f4.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport './Footer.css';\n\nconst Footer = () => {\n    return ( \n        <div className=\"footer\">\n            <p>v0.9.0 - 02/2020 Forrest Smith</p>\n        </div>\n     );\n}\n \nexport default Footer;","import React from 'react';\nimport './Header.css';\nimport logo from './wcdLogo.75bd35f4.png';\n\nconst Header = () => {\n    return ( \n        <div className=\"header\">\n            <img src={logo} alt=\"WCD logo\" className=\"header-logo\"/>\n            <h2 className=\"header-title\">R E P L A C E R</h2>\n        </div>\n     );\n}\n \nexport default Header;","const Git = window.require('nodegit');\nconst fs = window.require('fs');\n\nconst pathToRepo = window.require('path').resolve('./');\nconst Repo = Git.Repository.open(pathToRepo);\n\n\nconst getCurrentBranch = async () => {\n\n    Repo.then(repo => repo.getCurrentBranch()).then(res => console.log(res.name()));\n}\n\nconst backupToRepo = () => {\n\n}\n\nconst sayHello = () => {\n    return 'Hello';\n}\n\n\nexport default {\n    getCurrentBranch,\n    backupToRepo,\n    sayHello,\n};","import React, { useState, useEffect } from 'react';\nimport Footer from './components/Footer/Footer';\nimport Header from './components/Header/Header';\nimport './App.css';\nimport replacer from './scripts/replacer';\n\nconst os = window.require('os');\nconst fs = window.require('fs');\nconst { ipcRenderer } = window.require('electron');\nconst username = os.userInfo().username\n\nconst colorCodes = {\n\t\"BL:\": \"blue\",\n\t\"GR:\": \"green\",\n\t\"CY:\": \"cyan\",\n\t\"WR:\": \"yellow\",\n\t\"WH:\": \"white\",\n\t\"RD:\": \"red\",\n\t\"BK\": \"black\"\n};\n\nconst gtfo = {\n\t\"<div>\": true,\n\t\"<p>\": true,\n\t\"<li>\": true,\n\t\"var\": true,\n\t\"const\": true,\n\t\"let\": true,\n\t\"function\": true,\n\t\"if\": true,\n\t\"for\": true,\n\t\"return\": true,\n};\n\nconst valMessages = {\n\t'B': ' remind',\n\t'R': <strong style={{ color: 'red' }}>This input is on the naughty list. Try being more specific.</strong>,\n\t'W': <strong style={{ color: 'red' }}>This input is on the naughty list. Try being more specific.</strong>,\n\t'C': <strong style={{ color: 'red' }}>No alpha characters or CIIDs over 8 digits allowed.</strong>,\n};\n\nconst App = () => {\n\t// state\n\tconst [connected, setConnected] = useState(true);\n\tconst [validated, setValidated] = useState(false);\n\tconst [brandId, setBrandId] = useState('');\n\tconst [ciidInput, setCiidInput] = useState('');\n\tconst [ciidArray, setCiidArray] = useState([]);\n\tconst [replaceThis, setReplaceThis] = useState('');\n\tconst [withThis, setWithThis] = useState('');\n\tconst [del, setDel] = useState(false);\n\tconst [deleteConfirmed, setDeleteConfirmed] = useState(false);\n\tconst [firstOnly, setFirstOnly] = useState(false);\n\tconst [pyLog, setPyLog] = useState([]);\n\tconst [lastMessage, setLastMessage] = useState({ text: 'Standing by', color: \"black\" });\n\tconst [validationCode, setValidationCode] = useState('');\n\t// const [regexMatching, setRegexMatching] = useState(false);\n\t// const [regexp, setRegexp] = useState(null);\n\t// const [branch, setBranch] = useState(null);\n\t\n\tconst handleUpdateCiidInput = (e) => {\n\t\t// convert newLine characters to spaces when pasting from spreadsheet\n\t\tconst formattedValue = e.target.value.replace(/\\n/g, ' ');\n\t\tconst ciidArray = formattedValue.split(' ');\n\t\tsetCiidInput(formattedValue)\n\t\tsetCiidArray(ciidArray)\n\t}\n\n\tconst handleSubmit = () => {\n\t\tconst dataPayload = {\n\t\t\tusername,\n\t\t\tbrandId,\n\t\t\tciidArray,\n\t\t\treplaceThis,\n\t\t\twithThis,\n\t\t\tfirstOnly\n\t\t};\n\t\tipcRenderer.send('start_background', dataPayload);\n\t\tsetLastMessage({...lastMessage, text: `Running replace operation for CIIDs: ${ciidInput}`})\n\t}\n\n\tconst getBranch = () => {\n\t\treplacer.getCurrentBranch();\n\t}\n\n\tuseEffect(() => {\n\t\t// check connection to asset archive\n\t\tfs.access('/Volumes/Asset_Archive', (err) => {\n\t\t\tif (err) {\n\t\t\t\tsetConnected(false);\n\t\t\t\tsetLastMessage({\n\t\t\t\t\ttext: 'Not connected to Asset Archive',\n\t\t\t\t\tcolor: 'red'\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t})\n\n\tuseEffect(() => {\n\t\t// Validate Inputs on change\n\t\tlet validationCode = '';\n\t\t// ciid input regex: / alpha | under 7 digits | over 8 digits /\n\t\tconst reg = /[a-zA-Z]|\\b[0-9]{1,6}\\b|[0-9]{9,}/;\n\n\t\tconst deleteOp = del && deleteConfirmed;\n\t\t// input not on naughty list\n\t\tconst replaceSafe = replaceThis.length && !gtfo[replaceThis];\n\t\tif (!validationCode && replaceThis.length > 2 && gtfo[replaceThis]) validationCode = 'R';\n\t\tconst withSafe = (deleteOp || withThis.length) && !gtfo[withThis];\n\t\tif (!validationCode && withThis.length > 2 && gtfo[withThis]) validationCode = 'W';\n\n\t\t// ciids have no alpha characters and are no longer than 8 digits\n\t\tconst ciidCheck = ciidInput.length && !reg.test(ciidInput);\n\t\tif (!validationCode && ciidInput.length && !ciidCheck) validationCode = 'C';\n\n\t\tif (!validationCode && replaceSafe && withSafe && ciidCheck && !brandId.length) validationCode = 'B';\n\t\t// all values pass input constraints\n\t\tconst valid = brandId.length && replaceSafe && withSafe && ciidCheck;\n\t\tsetValidated(valid);\n\t\tsetValidationCode(validationCode);\n\t}, [brandId, replaceThis, withThis, ciidInput, del, deleteConfirmed, validated]);\n\n\tuseEffect(() => {\n\t\t// setting up an event listener to read data that background process\n\t\t// will send via the main process after processing the data sent from visible renderer process\n\t\tipcRenderer.on('MESSAGE_FROM_BACKGROUND_VIA_MAIN', (event, arg) => {\n\t\t\tlet log = pyLog;\n\t\t\tconst code = arg.substring(0, 3);\n\t\t\tconst color = (colorCodes[code] ? colorCodes[code] : 'white')\n\t\t\tconst trimmed = colorCodes[code] ? arg.substring(3, arg.length) : arg;\n\t\t\tconst text = color === 'white' ? `${trimmed}` : `***** ${trimmed} *****`;\n\t\t\tconst message = { text: text, color: color };\n\t\t\tlog.push(message);\n\t\t\tsetLastMessage(message);\n\t\t\tsetPyLog(log);\n\t\t});\n\t}, [pyLog])\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Header />\n\t\t\t<button onClick={() => getBranch()}></button>\n\t\t\t<select\n\t\t\t\tclassName={`brand-select browser-default${validationCode === 'B' ? valMessages['B'] : ''}`}\n\t\t\t\tvalue={brandId}\n\t\t\t\tonChange={e => setBrandId(e.target.value)}\n\t\t\t\tid=\"brandId\">\n\t\t\t\t<option value=\"\">Select Brand...</option>\n\t\t\t\t<option value=\"GP\">Gap</option>\n\t\t\t\t<option value=\"ON\">Old Navy</option>\n\t\t\t\t<option value=\"BR\">Banana Republic</option>\n\t\t\t\t<option value=\"AT\">Athleta</option>\n\t\t\t\t<option value=\"HC\">Hill City</option>\n\t\t\t\t<option value=\"GF\">Gap Factory</option>\n\t\t\t\t<option value=\"BF\">Banana Republic Factory</option>\n\t\t\t</select>\n\n\t\t\t<div id=\"optionsContainer\" className=\"container\">\n\t\t\t\t<div className=\"custom-control custom-checkbox\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tid=\"replaceOne\"\n\t\t\t\t\t\tclassName=\"custom-control-input\"\n\t\t\t\t\t\tchecked={firstOnly}\n\t\t\t\t\t\tonChange={() => setFirstOnly(!firstOnly)}></input>\n\t\t\t\t\t<label htmlFor=\"replaceOne\" className=\"custom-control-label\">Replace first instance only?</label>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"custom-control custom-checkbox delete\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tid=\"deleteOp\"\n\t\t\t\t\t\tclassName=\"custom-control-input\"\n\t\t\t\t\t\tchecked={del}\n\t\t\t\t\t\tonChange={() => setDel(!del)}></input>\n\t\t\t\t\t<label htmlFor=\"deleteOp\" className=\"custom-control-label\">Is this a delete operation?</label>\n\t\t\t\t</div>\n\t\t\t\t{/* <div className=\"custom-control custom-checkbox regex\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tid=\"regex\"\n\t\t\t\t\t\tclassName=\"custom-control-input\"\n\t\t\t\t\t\tchecked={regexMatching}\n\t\t\t\t\t\tonChange={() => this.setState(prevState => ({ regexMatching: !prevState.regexMatching }))}></input>\n\t\t\t\t\t<label htmlFor=\"regex\" className=\"custom-control-label\">Use regex matching? (Use caution!)</label>\n\t\t\t\t</div> */}\n\t\t\t</div>\n\n\t\t\t<label className=\"textinput-label\" htmlFor=\"replaceThis\">Replace this:{validationCode === 'R' ? valMessages['R'] : ''}</label>\n\t\t\t<textarea\n\t\t\t\tid=\"replaceThis\"\n\t\t\t\tplaceholder=\"Don't break stuff - Be specific\"\n\t\t\t\tvalue={replaceThis}\n\t\t\t\tonChange={e => setReplaceThis(e.target.value)}\n\t\t\t\tclassName=\"text-input\"\n\t\t\t\ttype=\"textarea\">\n\t\t\t</textarea>\n\n\t\t\t<div className=\"withThis-group\">\n\t\t\t\t<label className=\"textinput-label\" htmlFor=\"withThis\">With this:{validationCode === 'W' ? valMessages['W'] : ''}</label>\n\t\t\t\t<textarea\n\t\t\t\t\tid=\"withThis\"\n\t\t\t\t\tvalue={withThis}\n\t\t\t\t\tonChange={e => setWithThis(e.target.value)}\n\t\t\t\t\tclassName=\"text-input\"\n\t\t\t\t\ttype=\"textarea\">\n\t\t\t\t</textarea>\n\t\t\t\t<div \n\t\t\t\t\tclassName=\"custom-control custom-checkbox delete-confirm\"\n\t\t\t\t\tstyle={{visibility: del ? 'visible' : 'hidden'}}\n\t\t\t\t>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tid=\"deleteConfirm\"\n\t\t\t\t\t\tclassName=\"custom-control-input\"\n\t\t\t\t\t\tchecked={deleteConfirmed}\n\t\t\t\t\t\tonChange={() => setDeleteConfirmed(!deleteConfirmed)}></input>\n\t\t\t\t\t<label htmlFor=\"deleteConfirm\" className=\"custom-control-label\">Confirm this is a delete operation</label>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<label className=\"textinput-label\" htmlFor=\"ciidInput\">CIIDs to modify:{validationCode === 'C' ? valMessages['C'] : ''}</label>\n\t\t\t<textarea\n\t\t\t\tid=\"ciidInput\"\n\t\t\t\tplaceholder=\"No alpha characters, CIIDs must be 7 or 8 digits\"\n\t\t\t\tvalue={ciidInput}\n\t\t\t\tonChange={handleUpdateCiidInput}\n\t\t\t\tclassName=\"text-input\"\n\t\t\t\ttype=\"textarea\">\n\t\t\t</textarea>\n\t\t\t<div className=\"button-container\">\n\t\t\t\t<button \n\t\t\t\t\ttype=\"button\" \n\t\t\t\t\tclassName={`btn btn-outline-${validated ? 'success' : 'danger'}`} \n\t\t\t\t\tdisabled={!validated} \n\t\t\t\t\tonClick={handleSubmit}\n\t\t\t\t\t>{validated ? 'Run Replacement' : 'Awaiting valid input'}\n\t\t\t\t</button>\n\t\t\t\t<button \n\t\t\t\t\ttype=\"button\" \n\t\t\t\t\tclassName=\"btn btn-outline-dark\" \n\t\t\t\t\tonClick={() => ipcRenderer.send('show-log', pyLog)}\n\t\t\t\t\t>Show log\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div className=\"status\">\n\t\t\t\t<h4 style={{ color: lastMessage.color }}>Status: {lastMessage.text}</h4>\n\t\t\t\t<button \n\t\t\t\t\tclassName=\"reconnect btn btn-outline-primary\" \n\t\t\t\t\tstyle={{display: (connected ? 'none' : 'block')}}\n\t\t\t\t\tonClick={() => {setConnected(true); setLastMessage({text:'Standing by', color: 'black'})}}\n\t\t\t\t\t>Refresh</button>\n\t\t\t</div>\n\t\t\t<Footer />\n\t\t</div>\n\t);\n}\n\nexport default App;\n\n\n// boneyard\n\n// let regexp = null;\n// use regex in place of string if option checked\n// if(this.state.regexMatching) {\n// \t// deal with terminating escape character in user input\n// \tif(replaceThis[replaceThis.length - 1] === '\\\\') {\n// \t\tconsole.log(replaceThis[replaceThis.length - 1]);\n// \t\tregexp = this.state.firstOnly ? new RegExp(`${e.target.value}\\\\`) : new RegExp(`${e.target.value}\\\\`, 'g');\n// \t} else {\n// \t\tregexp = this.state.firstOnly ? new RegExp(e.target.value) : new RegExp(e.target.value, 'g');\n// \t}\n// };\n// setRegexp(regexp);","import React, { Component } from 'react';\nimport './Log.css';\n\nconst { ipcRenderer } = window.require('electron');\n\nclass Log extends Component {\n    state = {\n        pyLog: []\n    }\n\n    componentDidMount() {\n        ipcRenderer.on('log-data', (e, arg) => {\n            this.setState({\n                pyLog: arg\n            })\n        })\n    }\n\n    hideLog = () => {\n        ipcRenderer.send('hide-log');\n    }\n\n    render() {\n        return (\n            <div className=\"Log\">\n                <div className=\"button-container\">\n                    <button type=\"button\" className=\"btn btn-light\" onClick={() => this.hideLog()}>Close Log</button>\n                </div>\n                <div className=\"output-container\">\n                    {this.state.pyLog.map(((line, idx) =>\n                        <p\n                            key={idx}\n                            style={{\n                                color: line.color\n                            }}>\n                            {line.text}\n                        </p>\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Log;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport Log from './Log';\n\nconst Router = () => (\n    <BrowserRouter>\n        <Switch>\n            <Route exact path=\"/\" component={App} />\n            <Route exact path=\"/log\" component={Log} />\n        </Switch>\n    </BrowserRouter>\n);\n\nexport default Router;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Router from './Router';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<Router />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}